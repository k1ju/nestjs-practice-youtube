generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Channel {
  idx         Int       @id @default(autoincrement())
  id          String    @unique @db.VarChar
  pw          String    @db.VarChar
  name        String    @db.VarChar
  description String?   @db.VarChar
  profileImg  String?   @map("profile_img") @db.VarChar
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  deletedAt   DateTime? @map("deleted_at") @db.Timestamptz(6)

  provider   Subscribe[] @relation("subscribe_providerTochannel")
  subscriber Subscribe[] @relation("subscribe_subscriberTochannel")
  video      Video[]

  @@map("channel_tb")
}

model Subscribe {
  subscriber Int
  provider   Int

  provider   Channel @relation("subscribe_providerTochannel", fields: [provider], references: [idx], onDelete: NoAction, onUpdate: NoAction)
  subscriber Channel @relation("subscribe_subscriberTochannel", fields: [subscriber], references: [idx], onDelete: NoAction, onUpdate: NoAction)

  @@id([subscriber, provider], map: "subscribe_pk")
  @@map("subscribe_tb")
}

model Video {
  idx          Int       @id @default(autoincrement())
  channelIdx   Int       @map("channel_idx")
  title        String    @db.VarChar
  content      String    @db.VarChar
  thumbnailImg String?   @map("thumbnail_img") @db.VarChar
  createdAt    DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  deletedAt    DateTime? @map("deleted_at") @db.Timestamptz(6)

  channel Channel @relation(fields: [channelIdx], references: [idx], onDelete: NoAction, onUpdate: NoAction, map: "video_channel_fkey")

  @@map("video_tb")
}
